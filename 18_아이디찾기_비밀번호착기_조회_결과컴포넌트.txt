myadmin

http://moonjong.dothome.co.kr/myadmin
moonjong
anstjswhd0105#



1. 아이디찾기

Back-End
kurly_id_search_name_hp_select.php
=> 응답
=> 아이디찾기 결과를

Front-End
결과컴포넌트.jsx
Sub6SignInIdPwSearchResultComponent.jsx
아이디, 가입일을 전송한다.
라우터 네비게이트를 이용해서
상태변수 내용을 전송한다


2. 비밀번호찾기
Front-End
=> 아이디와 휴대폰 정보를 이용해서 비밀번호찾기
=> REST API(AXIOS API)  요청(Request) =>

Back-End
kurly_pw_search_id_hp_select.php
=> 응답
=> 비밀번호찾기 결과를
=> 가입회원 정보가 맞으면

Front-End
=> 비밀번호재설정 컴포넌트로 이동한다.

비밀번호재설정컴포넌트.jsx
새비밀번호1
새비밀번호2
새비밀번호 입력완료 후 전송버튼 클릭하면
=>

REST API(AXIOS API) => 데이터가 비동기 전송방식으로 서버에 전송된다.

=> 백앤드 서버사이드 스크립트 언어로 제작된 PHP 파일로 
새비밀번호가 전송된다.
그러면 PHP는 SQL UPDATE 명령어를 이용
데이터베이스(물리적인 관계형 RDB 저장장치)에 저장된 비밀번호를 수정 저장한다.

Sub6SignInPwResetComponent.jsx  => 패스네임 : sub6PwReset
kurly_pw_reset.php

UPDATE 테이블이름 SET 비밀번호='새비밀번호' WHERE 아이디='입력된아이디'
mysqli_query(쿼리실행);


Front-End  FORM DATA 보낸다 =>  REST API(AXIOS API)  요청(Request) =>  Back-End(PHP SQL => RDB)
Front-End  응답내용 받는다  <=  REST API(AXIOS API)  <= 응답(Response)  Back-End(PHP SQL => RDB)


Front-End  FORM DATA 아이디, 휴대폰번호 =>  REST API(AXIOS API) 조회(SELECT) 요청(Request) =>  Back-End(PHP SQL SELECT => RDB)
Front-End  응답내용 받는다 OK(1) 응답메시지 1이면 비밀번호 재설정화면으로 이동 <=  REST API(AXIOS API)  <=  응답(Response) OK(1) 또는 NO(0)  Back-End(PHP SQL SELECT => RDB)
Front-End  FORM DATA 아이디, 휴대폰번호, 입력데이터 새비밀번호 =>  REST API(AXIOS API) 비밀번호 수정(UPDATE) 요청(Request) =>  Back-End(PHP SQL UPDATE 새비밀번호수정 => RDB)
Front-End  응답내용 받는다 OK(1) 응답메시지 1이면 로그인화면으로 이동 <=  REST API(AXIOS API)  <=  응답(Response) OK(1) 또는 NO(0)  Back-End(PHP SQL UPDATE 새비밀번호수정 => RDB)


