회원가입폼 기획 & 설계
콘텐츠 너비 640
줄사이여백 패딩 위아래 10
줄사이여백 패딩 좌우  20
줄 내부 div box 입력상자 너비 100% 높이46
레이블박스 139 높이 46
버튼박스 130 좌측 패딩 10  버튼 120 높이 46

[1] 아이디 
    입력제한조건
     // 정규표현식[RegExp]
    // 1. 특수문자 => 입력과 동시 삭제  
    //    -, ], \  3개의 특수문자는 이스케이프 처리 =>  \-, \], \\
    // 2. 영문 혹은(이거나, 또는) 영문과 숫자를 조합(영문필수+, 숫자선택*)
    // 3. 한글 허용안함
    // 4. 공백 허용안함
    // 5. 6자 이상 16자 이하 글자 수 범위
    const   regexp1 = /[`~!@#$%^&*()\-_=+[{\]}\\|;:'",<.>/?]/g;
    //const   regexp2 = /[A-Za-z]+[0-9]*/g; // 영문필수, 숫자선택
    const   regexp2 = /(?=.*[A-Za-z])+(?=.*[0-9])*/g; // 전방탐색 ?= // 후방택색 ?<= | & ! = +  .  *  ?
    
    // const   regexp2 = /([A-Za-z]+[0-9]+)|([0-9]+[A-Za-z]+)/g; // 영문필수 숫자필수인 경우 버그 그래서 아래의 전방탐색 사용
    // const   regexp2 = /[A-Za-z]+[0-9]+/g; // 영문필수 숫자필수인 경우 버그 그래서 아래의 전방탐색 사용
    // const   regexp2 = /(?=.*[A-Za-z])+(?=.*[0-9])+/g;   // 전방탐색 ?= // 후방택색 ?<=
    const   regexp3 = /[가-힣ㄱ-ㅎㅏ-ㅣ]/g;
    const   regexp4 = /\s/g;
    const   regexp5 = /(.){6,16}/g;
    // 아이디 = 입력문자열.replace(정규표현식, '');
    아이디 = value.replace(regexp1, '');

    // 영문필수+, 숫자선택* test() => true, false반환
    // 정규표현식.test(입력문자열) === false 
    // 정규표현식.test(입력문자열) === true 
    if(regexp2.test(value)===false || regexp3.test(value)===true || regexp4.test(value)===true  ||  regexp5.test(value)===false ){
        idGuidText = '6자 이상 16자 이하의 영문 혹은 영문과 숫자를 조합';
    }
    else{
        idGuidText = '';
    }
    setState({
        ...state,
        아이디: 아이디,
        idGuidText: idGuidText
    });


[2] 비밀번호

1. 최소 10자 이상 입력 (10~16)
2. 영문/숫자/특수문자(공백 제외)만 허용하며, 2개 이상 조합
   (1) 영문 필수+숫자 필수+
   (2) 영문 필수+특수문자 필수+   
   (3) 숫자 필수+특수문자 필수+
3. 동일한 숫자 3개 이상 연속 사용 불가   444 
4. 공백 허용 안함
5. 한글 허용 안함

[3] 비밀번호확인
  let pw2GuidText = ''

    const {value} = e.target;

    if(value===''){
        pw2GuidText = '비밀번호를 한번 더 입력해 주세요.'
    }
    else if(value!==state.비밀번호){
        pw2GuidText = '동일한 비밀번호를 입력해 주세요.'
    }
    else {
        pw2GuidText = '';
    }

    setState({
        ...state,
        비밀번호확인: e.target.value,
        pw2GuidText: pw2GuidText
    });

[4] 이름
*  한글 숫자 영문 공백허용
1. 이름을 입력해 주세요.
2. 특수문자 => 입력과 동시 삭제


[5] 이메일
moonjong123@sshinchon.co.kr
moonseonjong@naver.com
moonseonjong@yahoo.co.kr
삼성전자@yahoo.co.kr
그린컴퓨터아카데미@그린.co.kr

1. 이메일을 입력해 주세요.
2. @ / ( )  []  \  "  ;  :  < > ,
3. . 0회 1회  ?
4. 영문숫자특수한글@영문숫자특수한글.영문숫자특수한글.com
4. 영문숫자특수한글@영문숫자특수한글.영문숫자특수한글.co.kr {2,3}


// 5. 이메일:'',
// /^[영문숫자한글특수]+((\.)?[영문숫자한글특수]+)*@[영문숫자한글특수.]+((\.)?[영문숫자한글특수]+)*\.[영문숫자한글특수.]+$/g;
// 1. 이메일을 입력해 주세요.
// 2. @ / ( )  []  \  "  ;  :  < > ,
// 3. . 0회 1회  ?
// 4. 영문숫자특수한글@영문숫자특수한글.영문숫자특수한글.com
// 5. 영문숫자특수한글@영문숫자특수한글.영문숫자특수한글.co.kr {2,3}

//    @ 좌측 특징 ///////////////////////////////////////////////////////    
//    @ 앳사인 좌측에 . 점을 찍으면 반드시 다음 문자열이 와야한다.
///      ((\.)?[영문숫자한글특수]+)*@


//    @ 우측 특징 ///////////////////////////////////////////////////////
//    @ 우측 . 점을 찍으면 반드시 다음 문자열이 와야한다.
//    ((\.)?[A-Za-z가-힣ㄱ-ㅎㅏ-ㅣ0-9`~!#$%^&*\-_=+{}|'?.]+)*

//    맨우측 끝에 . 점을 찍으면 반드시 다음 문자열이 와야한다.
//    \.[A-Za-z가-힣ㄱ-ㅎㅏ-ㅣ0-9`~!#$%^&*\-_=+{}|'?]+   브라켓안에 점이 없다. 


//    moonjong123@sshinchon.co.kr