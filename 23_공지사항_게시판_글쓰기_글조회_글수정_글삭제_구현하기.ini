공지사항 게시판(CRUD) 글쓰기 글조회 글수정 글삭제 구현하기
* 공지사항 게시판은 관리자만 글쓰기 권한이 있다. 그래서 관리자 페이지가 필요한다.
[1] 게시판 테이블생성(공지사항(Notice) 테이블)            
        - 테이블 Create 생성  
        - 테이블이름 : green_kurly_notice_table

        green_kurly_notice_table.php
        $SQL = CREATE TABLE green_kurly_notice_table (
            idx            INT               NOT NULL AUTO_INCREMENT,
            wNo            INT               NOT NULL,
            wType          VARCHAR(16)       NULL,
            wSubject       VARCHAR(250)      NOT NULL,
            wContent       TEXT              NOT NULL,
            wName          VARCHAR(30)       NULL,
            wId            VARCHAR(16)       NULL,
            wHit           INT               NULL,    
            wDate          timestamp DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY(idx)
        ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4;


1-1. 게시판 테이블 입력(INSERT) - 더미 데이터(테스트) 게시글 입력           
        - 테이블 입력(INSERT) 

        green_kurly_notice_table_insert_test.php

        $wNo = 1;
        $wType = ;
        $wSubject = My DT Pass 서비스 이용약관 개정 안내;    
        $wContent = 안녕하세요. 스타벅스 코리아 My DT Pass 서비스 이용약관이 개정되어 변경 내용을 안내드립니다.;
        $wName = 이순신;
        $wId = moonjong;
        $wHit = 0;
   
        // 공지사항 게시글 테이블 저장 
        // 단일 데이터
        $sql = INSERT INTO green_kurly_notice_table (wNo, wType, wSubject, wContent, wName, wId, wHit)
                VALUES ($wNo,$wType,$wSubject,$wContent,$wName,$wId,$wHit);
        $result = mysqli_query($conn, $sql);


        green_kurly_notice_table_insert_test_multi.php
        // 공지사항 게시글 테이블 저장
        // 다중 데이터
        $sql = INSERT INTO green_kurly_notice_table (wNo, wType, wSubject, wContent, wName, wId, wHit) VALUES 
                (2, ,     개인정보처리방침 개정 안내, 내용,조지현,moonjong5,0),
                (3, 공지, 스타벅스 카드 이용약관 개정 안내 개정 안내, 내용,이순신,moonjong,0),
                (4, ,     홈페이지 이용약관 개정 안내, 내용,이순신,moonjong,0),
                (5, ,     SSG Pay 결제 서비스 일시 이용 중지 안내, 내용,이순신,moonjong,0),
                (6, 공지, 시스템 개선 및 서비스 점검 안내, 내용,김수정,moonjong4,0),
                (7, ,     스타벅스 카드 이용약관 개정 안내, 내용,김수정,moonjong4,0),
                (8, ,     스타벅스 사칭 피싱 문자 및 SNS(카카오톡 오픈채팅, 페이스북 등) 이용 주의 안내, 내용,이순신,moonjong,0),
                (9, ,     시스템 개선 및 서비스 점검 안내,  내용,김수정,moonjong4,0),
                (10, ,     e-Gift Card 구매 가능 금액 안내, 내용,김수정,moonjong4,0),
                (11, 공지, 시스템 개선 및 서비스 점검 안내, 내용,조지현,moonjong5,0),
                (12, ,     스타벅스 코리아 사칭 (NFT 관련 등) 홈페이지 및 이메일 주의 안내, 내용,이순신,moonjong,0),
                (13, ,     시스템 개선 및 서비스 점검 안내, 내용,조지현,moonjong5,0),
                (14, ,     개인정보처리방침 개정 안내,  내용,조지현,moonjong5,0),
                (15, ,     탄소중립포인트 인센티브 지급 기준 안내,  내용,이순신,moonjong,0),
                (16, ,     금융상품 판매대리·중개업무 위탁 확인증서 게시,  내용,이소영,moonjong,0);
        $result = mysqli_query($conn, $sql);
    

1-2. 게시판 테이블 조회(SELECT) - REST API 구현 리액트 뷰 탬플릿 바인딩 
        - 조회(SELECT)

        // 타입을 기준으로 내림차순 정렬1, 날짜를 기준 내림차순 정렬
        // 공지글과 일반게시글 분류해서 출력한다. 
        $sql = SELECT * FROM green_kurly_notice_table ORDER BY wType DESC, wDate DESC;
        $res = mysqli_query($conn, $sql);
    
        // 객체(배열객체)로 선언           
        if( mysqli_num_rows($res) > 0 ){        
            $arr = array();
            while( $row = mysqli_fetch_array($res) ){
                array_push($arr, array(
                    번호  => $row[wNo],
                    타입  => $row[wType],
                    제목  => $row[wSubject],
                    내용  => $row[wContent],
                    작성자=> $row[wName],
                    아이디=> $row[wId],
                    조회수=> $row[wHit],
                    작성일=> $row[wDate]
                ));
            }        
        }    

        // JSON 형식의 객체로 생성 : 유니코드 사용 안함 JSON_UNESCAPED_UNICODE
        $json = json_encode($arr, JSON_UNESCAPED_UNICODE); //유니코드 사용 안함
        // $json = json_encode($arr); // 유니코드 사용
        echo $json;


        // 리액트
        // 컴포넌트 : Sub7NoticeComponentChildList.jsx

        // 상태관리
        const [state, setState] = React.useState({
            공지사항: [],
            공지카운트: 0,
            n: 0
        });

        // REST API : Back-End => Front-End
        React.useEffect(()=>{
            axios({
                url:http://moonjong.dothome.co.kr/kurly_green/green_kurly_notice_table_select.php,
                method:GET
            })
            .then((res)=>{
                console.log( AXIOS 성공! );
                console.log( res );
                console.log( res.data );
                if(res.status===200){
                    setState({
                        ...state,
                        공지사항: res.data                   
                    })
                }
                
            })
            .catch((err)=>{
                console.log( AXIOS 실패! );
                console.log( err );
            });
            return;
        },[]);


        React.useEffect(()=>{
            if(state.공지사항.length>0){
                let cnt=0;
                state.공지사항.map((item, idx)=>{
                    if(item.타입===공지){
                        cnt++;
                    }
                });
                setState({
                    ...state,
                    공지카운트: cnt,
                    n: state.공지사항.length
                })
            }
        },[state.공지사항]);


        // 자식 컴포넌트 프롭스 전달 => Sub7NoticeComponentChildList.jsx
        {/* 공지사항 목록 자식 컴포넌트 */}
        <Sub7NoticeComponentChildList 공지사항={state.공지사항} 공지카운트={state.공지카운트} n={state.n}  />
        
        // 공지사항 리스트 목록 출력
         {
                공지사항.length > 0 && (
                    공지사항.map((item, idx)=>{
                        return(
                            <li key={item.번호}>
                                <ul className=column-box>
                                    <li className=col1><span>{item.타입===공지?item.타입:n-idx}</span></li>
                                    <li className=col2><span>{item.제목}</span></li>
                                    <li className=col3><span>{item.작성자}</span></li>
                                    <li className=col4><span>{`${new Date(item.작성일).getFullYear()}.${new Date(item.작성일).getMonth()+1}.${new Date(item.작성일).getDate()}`}</span></li>
                                </ul>  
                            </li>
                        )
                    })
                    
                )
            }   
        



[2] 관리자 회원 테이블생성(어드민(ADMIN) 테이블) - Create 생성
    - 테이블 Create 생성  
    - 테이블이름 : green_kurly_admin_table.php
    
2-1. 관리자 회원(ADMIN) 테이블 입력(INSERT) - 더미 데이터(테스트) 회원 입력           
        - 테이블 입력(INSERT) 

        - 파일이름 : green_kurly_notice_table_insert_test.php
        // 단일 데이터 
        $adminId       = moonjong;
        $adminPw       = moonjong123;
        $adminName     = 이순신;    
        $adminEmail    = moonjong@naver.com;
        $adminHp       = 010-7942-5305;
        $adminAddress  = 서울시 신촌로 우리집;
    
        // 관리자 회원 가입 저장
        $sql = INSERT INTO green_kurly_admin_table (adminId, adminPw, adminName, adminEmail, adminHp, adminAddress)
                VALUES ($adminId,$adminPw,$adminName,$adminEmail,$adminHp,$adminAddress);
        $result = mysqli_query($conn, $sql);

        - 파일이름 : green_kurly_admin_table_insert_test_multi.php
        // 다중 데이터         
        // 관리자 회원 가입 저장
        $sql = INSERT INTO green_kurly_admin_table (adminId, adminPw, adminName, adminEmail, adminHp, adminAddress) VALUES 
                (moonjong2,moonjong123,이순신,moonjong2@naver.com,010-7942-5305,서울시 강남구 논현동 123),
                (moonjong3,moonjong123,이소영,moonjong3@naver.com,010-348-7942,서울시 서초구 서초동 777),
                (moonjong4,moonjong123,김수정,moonjong4@naver.com,010-632-6441,서울시 서대문구 연희동 356),
                (moonjong5,moonjong123,조지현,moonjong5@naver.com,010-8876-1234,서울시 중구 연수로 89),
                (moonjong6,moonjong123,정지연,moonjong6@naver.com,010-978-7890,서울시 강동구 길동 16);            
        $result = mysqli_query($conn, $sql);
    


ASP(MSSQL)
PHP(MYSQL)
JSP(MYSQL, ORACLE)
+
[포토샵: 이미지편집, 일러스트레이터: 드로잉, SVG제작, 피그마]
+
[HTML, CSS, SASS, RWD]
+
[깃허브: 형상관리, 우분투(리눅스) GitBash, SSH(리눅스)]
+
[프로토타입제작: 피그마]
+
Javascript 라이브러리(리액트 + [라우터, 리덕스 코어, 리덕스 툴킷, 노드, 넥스트, 타입스크립트]) & 프레임워크(뷰) + REST API
= 풀스택


고객센터
왼쪽컴포넌트
Sub7NoticeLeftComponent.jsx


CRUD(Create Read Update Delete) 구현
1. 글쓰기(INSERT)
2. 글목록(SELECT)
3. 글수정(UPDATE)
4. 글삭제(DELETE)


http://moonjong.dothome.co.kr/myadmin
moonjong
anstjswhd0105#

1. 글쓰기(INSERT)
    Front-Edn 
    - 컴포넌트 : Sub7NoticeInsertFormComponent.jsx
    가. 글쓰기폼 컴폰넌트 UIUX 디자인 제작        
        타입 : 공지 또는 공백 => 라디오 버튼
        제목 :  
        내용 : 
        작성자: 관리자 로그인 이름
        아이디: 관리자 로그인 아이
        디

    백앤드
    Back-End
    http://moonjong.dothome.co.kr/kurly_green/green_kurly_notice_table_insert.php
    